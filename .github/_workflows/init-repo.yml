name: Initialize Repo

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      env_file:
        description: >
          Paste the full content of your .env.local file here (single line, space-separated).
          Required: DatoCMS API tokens and SITE_URL.
        required: true
      website_url:
        description: >
          Public URL of your deployed Vercel site (e.g. https://your-site.vercel.app).
        required: true
      lhci_github_app_token:
        description: >
          (Optional) The Lighthouse CI App token from https://github.com/apps/lighthouse-ci.
          Used only if you plan to integrate Lighthouse CI.
        required: false
      pat_token:
        description: >
          A GitHub Personal Access Token with repo admin, secrets, and pages access.
          Generate it at https://github.com/settings/personal-access-tokens
        required: true

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - name: Create secret environment variables from inputs (safely)
        run: |
          ENV_FILE=$(jq -r '.inputs.env_file' "$GITHUB_EVENT_PATH")
          WEBSITE_URL=$(jq -r '.inputs.website_url' "$GITHUB_EVENT_PATH")
          LHCI_GITHUB_APP_TOKEN=$(jq -r '.inputs.lhci_github_app_token' "$GITHUB_EVENT_PATH")
          PAT_TOKEN=$(jq -r '.inputs.pat_token' "$GITHUB_EVENT_PATH")

          echo "::add-mask::$ENV_FILE"
          echo "::add-mask::$WEBSITE_URL"
          echo "::add-mask::$LHCI_GITHUB_APP_TOKEN"
          echo "::add-mask::$PAT_TOKEN"

          echo "ENV_FILE=$ENV_FILE" >> $GITHUB_ENV
          echo "WEBSITE_URL=$WEBSITE_URL" >> $GITHUB_ENV
          echo "LHCI_GITHUB_APP_TOKEN=$LHCI_GITHUB_APP_TOKEN" >> $GITHUB_ENV
          echo "PAT_TOKEN=$PAT_TOKEN" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install required CLI tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Run initialization script (with LHCI token)
        if: ${{ github.event.inputs.lhci_github_app_token != '' }}
        env:
          GH_TOKEN: ${{ env.PAT_TOKEN }}
        run: |
          echo "✅ LHCI_GITHUB_APP_TOKEN is present."
          bash scripts/initialize-repo.sh \
            "${{ github.repository_owner }}" \
            "${{ github.event.repository.name }}" \
            "${{ env.PAT_TOKEN }}" \
            "$ENV_FILE" \
            "$WEBSITE_URL" \
            "$LHCI_GITHUB_APP_TOKEN"

      - name: Run initialization script (without LHCI token)
        if: ${{ github.event.inputs.lhci_github_app_token == '' }}
        env:
          GH_TOKEN: ${{ env.PAT_TOKEN }}
        run: |
          echo "ℹ️ LHCI_GITHUB_APP_TOKEN not provided. Skipping it."
          bash scripts/initialize-repo.sh \
            "${{ github.repository_owner }}" \
            "${{ github.event.repository.name }}" \
            "${{ env.PAT_TOKEN }}" \
            "$ENV_FILE" \
            "$WEBSITE_URL"